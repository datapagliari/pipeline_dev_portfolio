{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"projects/","text":"\ud83e\udde9 Projects & Features \u00b6 A selection of key tools and systems developed as part of the Sombrero pipeline \u2014 focused on automation, integration, and creative workflow optimization across multiple DCCs. \ud83c\udf00 Synctool Refactor \u00b6 Refactor and modular redesign of Synctool , the synchronization system between ShotGrid, Deadline, and internal servers. Introduced dynamic entities, unified payload structure, and dependency management across multiple contexts. Focus: stability, cleaner architecture, and granular logging. Tags: python api shotgrid deadline pipeline \ud83d\udce6 Delivery System \u00b6 Automation of the playlist \u2192 render \u2192 publish pipeline. Connected PDG (Houdini) with Nuke job generation through Deadline, handling dependencies and batch publishing to ShotGrid. Result: fully hands-off delivery process for client reels and review versions, with tracked dependencies and batch metadata. Tags: pdg nuke shotgrid automation delivery \ud83e\udde0 Bid Loader \u00b6 Tool for importing and structuring bids and budgeting data directly into ShotGrid or toolsets. Simplified resource planning and task tracking for VFX projects. Tags: shotgrid data planning \ud83c\udfac Blender Submitter & Compositor Helper \u00b6 Blender addon integrating Deadline submission with compositor automation. Automatically checks \u201cUse Nodes\u201d, adds File Output nodes, and embeds project metadata. Impact: eliminated manual setup errors and standardized render submissions. Tags: blender addon deadline automation \ud83e\uddfe Report Notes & Report Tool \u00b6 Two complementary modules: - Report Notes in ShotGrid: extracts and formats artist notes for review reports. - Report Tool: standalone interface for generating daily PDF/HTML reports. Focus: technical visibility and communication between departments. Tags: reporting shotgrid pipeline \u2601\ufe0f S3 Syncs & Backup Crawler \u00b6 Utilities for syncing local storage with S3 buckets, plus a crawler for automated backups. Result: redundancy, reliability, and traceable publishing of versioned assets. Tags: aws s3 backup sync \ud83e\uddee Rotating Logs \u00b6 Implementation of a rotating logging system with timestamps and configurable levels. Used across multiple internal tools (Synctool, Daemons, Toolsets). Goal: maintain clean, manageable logs and avoid accumulation on long-running processes. Tags: logging python automation \ud83e\udded Showpath Tool & Tracker Cache \u00b6 Showpath Tool: retrieves and validates production paths across platforms. Tracker Cache: caches ShotGrid or local queries, reducing latency for dependent tools. Result: faster workflows, fewer redundant queries, improved stability. Tags: python shotgrid tools cache \ud83d\uddbc\ufe0f Slates, Contact Sheet & Publish Canvas \u00b6 Slates: automated title cards with metadata and studio branding. Contact Sheet: automatic frame collage for quick visual review. Publish Canvas: visual dashboard for version publication control. Focus: clarity and presentation in review and delivery processes. Tags: nuke rendering design automation \ud83c\udf10 Frontend, APIs & ShotGrid Daemon \u00b6 Development of lightweight web frontends and API endpoints to trigger Synctool, Delivery, and reporting actions. The ShotGrid Daemon keeps versions, thumbnails, and status synchronized between the database and storage. Stack: Vue.js, Python (Flask/FastAPI), ShotGrid API, WebSockets. Tags: web vue api flask fastapi shotgrid \ud83e\uddf0 DCC Integrations \u00b6 Continuous development and maintenance of deep integrations for: - Nuke: HS Write node, Delivery templates, automatic versioning. - Houdini: PDG job creation and procedural dependency management. - Blender: custom addons, UI panels, File Output automation. Goal: unify publishing and versioning across all DCCs. Tags: nuke houdini blender integration pipeline These tools collectively form the backbone of Sombrero\u2019s automated publishing ecosystem \u2014 connecting creative tools, databases, and delivery systems into a cohesive, artist-friendly workflow.","title":"Projects"},{"location":"projects/#projects-features","text":"A selection of key tools and systems developed as part of the Sombrero pipeline \u2014 focused on automation, integration, and creative workflow optimization across multiple DCCs.","title":"\ud83e\udde9 Projects &amp; Features"},{"location":"projects/#synctool-refactor","text":"Refactor and modular redesign of Synctool , the synchronization system between ShotGrid, Deadline, and internal servers. Introduced dynamic entities, unified payload structure, and dependency management across multiple contexts. Focus: stability, cleaner architecture, and granular logging. Tags: python api shotgrid deadline pipeline","title":"\ud83c\udf00 Synctool Refactor"},{"location":"projects/#delivery-system","text":"Automation of the playlist \u2192 render \u2192 publish pipeline. Connected PDG (Houdini) with Nuke job generation through Deadline, handling dependencies and batch publishing to ShotGrid. Result: fully hands-off delivery process for client reels and review versions, with tracked dependencies and batch metadata. Tags: pdg nuke shotgrid automation delivery","title":"\ud83d\udce6 Delivery System"},{"location":"projects/#bid-loader","text":"Tool for importing and structuring bids and budgeting data directly into ShotGrid or toolsets. Simplified resource planning and task tracking for VFX projects. Tags: shotgrid data planning","title":"\ud83e\udde0 Bid Loader"},{"location":"projects/#blender-submitter-compositor-helper","text":"Blender addon integrating Deadline submission with compositor automation. Automatically checks \u201cUse Nodes\u201d, adds File Output nodes, and embeds project metadata. Impact: eliminated manual setup errors and standardized render submissions. Tags: blender addon deadline automation","title":"\ud83c\udfac Blender Submitter &amp; Compositor Helper"},{"location":"projects/#report-notes-report-tool","text":"Two complementary modules: - Report Notes in ShotGrid: extracts and formats artist notes for review reports. - Report Tool: standalone interface for generating daily PDF/HTML reports. Focus: technical visibility and communication between departments. Tags: reporting shotgrid pipeline","title":"\ud83e\uddfe Report Notes &amp; Report Tool"},{"location":"projects/#s3-syncs-backup-crawler","text":"Utilities for syncing local storage with S3 buckets, plus a crawler for automated backups. Result: redundancy, reliability, and traceable publishing of versioned assets. Tags: aws s3 backup sync","title":"\u2601\ufe0f S3 Syncs &amp; Backup Crawler"},{"location":"projects/#rotating-logs","text":"Implementation of a rotating logging system with timestamps and configurable levels. Used across multiple internal tools (Synctool, Daemons, Toolsets). Goal: maintain clean, manageable logs and avoid accumulation on long-running processes. Tags: logging python automation","title":"\ud83e\uddee Rotating Logs"},{"location":"projects/#showpath-tool-tracker-cache","text":"Showpath Tool: retrieves and validates production paths across platforms. Tracker Cache: caches ShotGrid or local queries, reducing latency for dependent tools. Result: faster workflows, fewer redundant queries, improved stability. Tags: python shotgrid tools cache","title":"\ud83e\udded Showpath Tool &amp; Tracker Cache"},{"location":"projects/#slates-contact-sheet-publish-canvas","text":"Slates: automated title cards with metadata and studio branding. Contact Sheet: automatic frame collage for quick visual review. Publish Canvas: visual dashboard for version publication control. Focus: clarity and presentation in review and delivery processes. Tags: nuke rendering design automation","title":"\ud83d\uddbc\ufe0f Slates, Contact Sheet &amp; Publish Canvas"},{"location":"projects/#frontend-apis-shotgrid-daemon","text":"Development of lightweight web frontends and API endpoints to trigger Synctool, Delivery, and reporting actions. The ShotGrid Daemon keeps versions, thumbnails, and status synchronized between the database and storage. Stack: Vue.js, Python (Flask/FastAPI), ShotGrid API, WebSockets. Tags: web vue api flask fastapi shotgrid","title":"\ud83c\udf10 Frontend, APIs &amp; ShotGrid Daemon"},{"location":"projects/#dcc-integrations","text":"Continuous development and maintenance of deep integrations for: - Nuke: HS Write node, Delivery templates, automatic versioning. - Houdini: PDG job creation and procedural dependency management. - Blender: custom addons, UI panels, File Output automation. Goal: unify publishing and versioning across all DCCs. Tags: nuke houdini blender integration pipeline These tools collectively form the backbone of Sombrero\u2019s automated publishing ecosystem \u2014 connecting creative tools, databases, and delivery systems into a cohesive, artist-friendly workflow.","title":"\ud83e\uddf0 DCC Integrations"}]}